name: "CI"

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build & Test on ${{ matrix.OS_NAME }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            OS_NAME: win-x64
          - os: ubuntu-latest
            OS_NAME: linux-x64
          - os: macos-latest
            OS_NAME: osx-x64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
          cache: false

      - name: Install dependencies
        run: |
          go run .
          go get .

      - name: Build
        run: go build -v ./...

      - name: Test
        if: matrix.os != 'windows-latest'
        run: go test -v ./...

      # Temporary solution
      - name: Test on windows
        if: matrix.os == 'windows-latest'
        run: |
          copy internal/native/graal/*DxFeedGraalNativeSdk.* C:\Windows\System32
          go test -v ./...

  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            OS_NAME: win-x64
          - os: ubuntu-latest
            OS_NAME: linux-x64
          - os: macos-latest
            OS_NAME: osx-x64
    needs: build_and_test
    if: (startsWith(github.event.ref, 'refs/tags/'))

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
          cache: false

      - name: Install dependencies
        run: |
          go run .
          go get .

      - name: Build Tools
        run: make build
        shell: bash

      - name: Zip Tools
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: tools-${{ matrix.OS_NAME }}-${{ github.ref_name }}.zip
          directory: 'bin/'
          path: "."

      - name: Upload Tools
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            bin/*.zip
          token: ${{ secrets.GITHUB_TOKEN }}
